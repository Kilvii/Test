    enum StorageKey: String {
        case startDate
        case profile
        case existProfile
        case firstLaunch
        case lastLaunch
    }
    
    private let assembly = Assembly()
    
    lazy var formatter = assembly.dateFormatter(format: .HHmmss)
    lazy var dataStorage = assembly.dataStorage
    
    var dateLaunch: Date!
    

    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {
        print(#function)
        
        let userDefaults = UserDefaults.standard
        let encoder = JSONEncoder()
        let decoder = JSONDecoder()
    
  
        let userDefaultsStorage = UserDefaultsStorage(encoder: encoder, decoder: decoder, userDefaults: userDefaults)
        
        //UserDefaults.standard.set(false, forKey: StorageKey.existProfile.rawValue)
        
        let existedProfile = userDefaults.bool(forKey: StorageKey.existProfile.rawValue)
        
        if(existedProfile){
            let data = userDefaults.data(forKey: StorageKey.profile.rawValue)

            if let user: Profile = userDefaultsStorage.value(key: StorageKey.profile.rawValue) {
                print("\n\(user)\n")
            }

        }
        else{
            let user = Profile(id: "1",name: "Alex")
            userDefaultsStorage.save(value: user, key: StorageKey.profile.rawValue)
            userDefaults.set(true, forKey: StorageKey.existProfile.rawValue)
        }

